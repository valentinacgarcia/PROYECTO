version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: symfony-backend
    restart: unless-stopped
    working_dir: /var/www/symfony
    volumes:
      - ./backend/symfony:/var/www/symfony
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: mysql://user:userpassword@mysql:3306/dbname
      APP_ENV: dev
      MINIO_ENDPOINT: http://localhost:9001
      MINIO_KEY: petmatch
      MINIO_SECRET: petmatch
      MINIO_BUCKET: mascotas
    depends_on:
      - mysql
      - minio
    networks:
      - app-network
    command: php -S 0.0.0.0:8000 -t public/

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: dbname
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
      MYSQL_ROOT_HOST: '%'
    command: '--default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0'
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: petmatch
      MINIO_ROOT_PASSWORD: petmatch
    ports:
      - "9000:9000"  # API S3 compatible
      - "9001:9001"  # Consola web
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network

volumes:
  mysql-data:
  minio-data:

networks:
  app-network:
    driver: bridge
